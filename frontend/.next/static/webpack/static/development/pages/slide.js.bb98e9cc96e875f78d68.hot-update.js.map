{"version":3,"file":"static/webpack/static/development/pages/slide.js.bb98e9cc96e875f78d68.hot-update.js","sources":["webpack:///./components/Menu/ListMenu.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport './Menu.scss'\n\nexport default class ListMenu extends Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.elementItems = []\n        this.elementOrderItems = []\n        this.elementOrderItemsCopy = []\n        this.elementTitleItems = []\n        this.elementTitleItemsCopy = []\n\n        this.final = []\n\n        this.maMap = new Map()\n\n        this.state = {\n            newMap: new Map()\n        }\n    }\n    componentDidMount() {\n        const { data, nb } = this.props\n\n        this.setState({\n                // newMap: this.initList( data, nb )\n                newMap: this.getArrayofLink(data)\n            }\n        )\n    }\n\n    getArrayofLink = (data) => {\n        let newArray = []\n\n        data.parcours.map( ( parcour, key) => {\n            newArray = parcour.textes.concat(parcour.quotes).concat(parcour.videos)\n        })\n\n        const arr = [...newArray].sort(dynamicSort(\"ordre\"))\n        console.log(arr)\n        return arr\n    \n    }\n    // initList(data, nb) {\n    //     for(let i = 3; i < nb; i++) {\n    //         this.elementItems.push(i)\n    //     }\n    //     for(const parcour of data.parcours) {\n    //         if(parcour.textes.length !== 0) {\n    //             for(const text of parcour.textes) {\n    //                 this.elementOrderItems.push(text.ordre)\n    //             }\n    //         }\n    //         if(parcour.videos.length !== 0) {\n    //             for(const video of parcour.videos) {\n    //                 this.elementOrderItems.push(video.ordre)\n    //             }\n    //         }\n    //         if(parcour.quotes.length !== 0) {\n    //             for(const quote of parcour.quotes) {\n    //                 this.elementOrderItems.push(quote.ordre)\n    //             }\n    //         }\n    //         for(const element of this.elementOrderItems) {\n    //             if(parcour.textes.length !== 0) {\n    //                 for(const text of parcour.textes) {\n    //                     if(text.ordre === element) {\n    //                         this.elementTitleItems.push(text.titre) \n    //                     }\n    //                 }\n    //             }\n\n    //             if(parcour.videos.length !== 0) {\n    //                 for(const video of parcour.videos) {\n    //                     if(video.ordre === element) {\n    //                         this.elementTitleItems.push(video.Titre)\n    //                     }\n    //                 }\n    //             }\n\n    //             if(parcour.quotes.length !== 0) {\n    //                 for(const quote of parcour.quotes) {\n    //                     if(quote.ordre === element) {\n    //                         this.elementTitleItems.push(quote.titre)\n    //                     }\n    //                 }\n    //             }\n    //         }          \n            \n    //         for (let i=0; i < this.elementItems.length; i++) {\n    //             this.maMap.set(this.elementOrderItems[i], this.elementTitleItems[i])\n    //             this.state.newMap = new Map([...this.maMap].sort())\n    //         }\n\n    //         return this.state.newMap\n    //     }\n        \n    // }\n    \n    render() {\n        const arr = Array.from(this.state.newMap)\n        return (\n            <div className=\"Salut\">\n                <ul>\n                {\n                   arr.map( ( valeur, key) => (\n                        <li key={key}> \n                            <a href={`/parcours/les-femmes-dans-la-rue/${valeur[0]}`}>\n                            <span className=\"number\"> { valeur[0] }</span>\n                            <span className=\"title\"> { valeur[1] }</span>\n                            </a>\n                        </li>\n                   )) \n                }\n                </ul>\n            </div>\n        )\n    \n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA4BA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AApCA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AADA;AAbA;AAgBA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AAKA;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AAaA;;;;AApHA;AACA;;;;;A","sourceRoot":""}